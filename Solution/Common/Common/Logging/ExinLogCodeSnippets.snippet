<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">

  <!-- To activate these code snippets, browse the parent folder of this file
    in (VS2012)/Tools/Code Snippets Manager/
    -->
  
  <!--Regular-->

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Trace</Title>
      <Description>Log.Trace</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lt</Shortcut>
      <SnippetTypes>
        <!--<SnippetType>SurroundsWith</SnippetType>-->
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Trace($this$, m => m("$end$"));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Info</Title>
      <Description>Log.Info</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>li</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Info($this$, m => m("$end$"));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Debug</Title>
      <Description>Log.Debug</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>ld</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Debug($this$, m => m("$end$"));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Warn</Title>
      <Description>Log.Warn</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lw</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Warn($this$, m => m("$end$"));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Error</Title>
      <Description>Log.Error</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>le</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Error($this$, m => m("$end$"));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Fatal</Title>
      <Description>Log.Fatal</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lf</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Fatal($this$, m => m("$end$"));]]>
      </Code>
    </Snippet>
  </CodeSnippet>
  
  <!-- With Exception -->

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Trace with exception</Title>
      <Description>Log.Trace</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lte</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Trace($this$, m => m("$end$"), LogTarget.$logTarget$, $exception$);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Info with exception</Title>
      <Description>Log.Info</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lie</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Info($this$, m => m("$end$"), LogTarget.$logTarget$, $exception$);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Debug with exception</Title>
      <Description>Log.Debug</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lde</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Debug($this$, m => m("$end$"), LogTarget.$logTarget$, $exception$);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Warn with exception</Title>
      <Description>Log.Warn</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lwe</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Warn($this$, m => m("$end$"), LogTarget.$logTarget$, $exception$);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Error with exception</Title>
      <Description>Log.Error</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lee</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Error($this$, m => m("$end$"), LogTarget.$logTarget$, $exception$);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Fatal with exception</Title>
      <Description>Log.Fatal</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lfe</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Fatal($this$, m => m("$end$"), LogTarget.$logTarget$, $exception$);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <!-- Localized -->

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Trace localized</Title>
      <Description>Log.Trace</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>ltl</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Trace($this$, m => m(Localized.ResourceManager, LocalizedKeys.$end$));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Info localized</Title>
      <Description>Log.Info</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lil</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Info($this$, m => m(Localized.ResourceManager, LocalizedKeys.$end$));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Debug localized</Title>
      <Description>Log.Debug</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>ldl</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Debug($this$, m => m(Localized.ResourceManager, LocalizedKeys.$end$));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Warn localized</Title>
      <Description>Log.Warn</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lwl</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Warn($this$, m => m(Localized.ResourceManager, LocalizedKeys.$end$));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Error localized</Title>
      <Description>Log.Error</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lel</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Error($this$, m => m(Localized.ResourceManager, LocalizedKeys.$end$));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Fatal localized</Title>
      <Description>Log.Fatal</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lfl</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Fatal($this$, m => m(Localized.ResourceManager, LocalizedKeys.$end$));]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <!-- Localized, with Exception -->

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Trace localized, with exception</Title>
      <Description>Log.Trace</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>ltle</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Trace($this$,
	m => m(Localized.ResourceManager, LocalizedKeys.$end$),
	LogTarget.$logTarget$,
	$exception$
);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Info localized, with exception</Title>
      <Description>Log.Info</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lile</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Info($this$,
	m => m(Localized.ResourceManager, LocalizedKeys.$end$),
	LogTarget.$logTarget$,
	$exception$
);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Debug localized, with exception</Title>
      <Description>Log.Debug</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>ldle</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Debug($this$,
	m => m(Localized.ResourceManager, LocalizedKeys.$end$),
	LogTarget.$logTarget$,
	$exception$
);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Warn localized, with exception</Title>
      <Description>Log.Warn</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lwle</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Warn($this$,
	m => m(Localized.ResourceManager, LocalizedKeys.$end$),
	LogTarget.$logTarget$,
	$exception$
);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Error localized, with exception</Title>
      <Description>Log.Error</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lele</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Error($this$,
	m => m(Localized.ResourceManager, LocalizedKeys.$end$),
	LogTarget.$logTarget$,
	$exception$
);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Log.Fatal localized, with exception</Title>
      <Description>Log.Fatal</Description>
      <Author>Norbert Virth</Author>
      <Shortcut>lfle</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>this</ID>
          <ToolTip>"this" or "typeof([smg])"</ToolTip>
          <Default>this</Default>
        </Literal>
        <Literal>
          <ID>logTarget</ID>
          <ToolTip>LogTarget value</ToolTip>
          <Default>All</Default>
        </Literal>
        <Literal>
          <ID>exception</ID>
          <ToolTip>Exception</ToolTip>
          <Default>new ForStackTraceException()</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp" Kind="any">
        <![CDATA[Log.Fatal($this$,
	m => m(Localized.ResourceManager, LocalizedKeys.$end$),
	LogTarget.$logTarget$,
	$exception$
);]]>
      </Code>
    </Snippet>
  </CodeSnippet>

</CodeSnippets>